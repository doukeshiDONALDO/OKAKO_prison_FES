CCS PCM C Compiler, Version 3.127, 16805

               Filename: G:\ï∂âªç’\auaua.LST

               ROM used: 115 (3%)
                         Largest free fragment is 2048
               RAM used: 17 (9%) at main() level
                         18 (9%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03F
0003:  NOP
....................  #include <j:\ccs-c\devices\16f873a.h> 
....................  //////// Standard Header file for the PIC16F873A device ////////////////  
.................... #device PIC16F873A  
.................... #list  
....................  
.................... #Fuses 	HS,NOWDT,NOPROTECT,NOLVP  
.................... #use	delay(clock=20000000)  
*
002B:  MOVLW  31
002C:  MOVWF  04
002D:  MOVF   00,W
002E:  BTFSC  03.2
002F:  GOTO   03D
0030:  MOVLW  06
0031:  MOVWF  21
0032:  CLRF   20
0033:  DECFSZ 20,F
0034:  GOTO   033
0035:  DECFSZ 21,F
0036:  GOTO   032
0037:  MOVLW  7B
0038:  MOVWF  20
0039:  DECFSZ 20,F
003A:  GOTO   039
003B:  DECFSZ 00,F
003C:  GOTO   030
003D:  BCF    0A.3
003E:  GOTO   070 (RETURN)
.................... int a,b,c,aa,bb,cc,aaa,bbb,ccc,check,cnt;  
.................... void sub (void);  
.................... void sub_2 (void);  
.................... void main(void)  
.................... {  
003F:  CLRF   04
0040:  MOVLW  1F
0041:  ANDWF  03,F
0042:  MOVLW  07
0043:  BSF    03.5
0044:  MOVWF  1F
0045:  MOVLW  07
0046:  BCF    03.5
0047:  MOVWF  1F
0048:  MOVLW  FF
0049:  MOVWF  30
.................... 	set_tris_a(0x80);  
004A:  MOVLW  80
004B:  BSF    03.5
004C:  MOVWF  05
.................... 	set_tris_b(0x80);  
004D:  MOVLW  80
004E:  MOVWF  06
.................... 	set_tris_c(0x80);  
004F:  MOVLW  80
0050:  MOVWF  07
0051:  BCF    03.5
0052:  MOVWF  30
....................   
.................... 	a = 0;				//  a,b,c	ìñÇΩÇËåãâ ï€éùïœêî  
0053:  CLRF   25
.................... 	b = 0;  
0054:  CLRF   26
.................... 	a = 0;  
0055:  CLRF   25
.................... 	aa = 0;				// aa,bb,cc	LEDéµïœâªïœêî  
0056:  CLRF   28
.................... 	bb = 0;  
0057:  CLRF   29
.................... 	cc = 0;  
0058:  CLRF   2A
.................... 	aaa = 0xf0;			// aaa,bbb,ccc	LEDèoóÕïœêî  
0059:  MOVLW  F0
005A:  MOVWF  2B
.................... 	bbb = 0xf0;  
005B:  MOVLW  F0
005C:  MOVWF  2C
.................... 	ccc = 0xf0;  
005D:  MOVLW  F0
005E:  MOVWF  2D
.................... //	aaa &= 0x7e;  
.................... //	bbb &= 0x7e;  
.................... //	ccc &= 0x7e;   
....................   
.................... 	while( 1 ){  
.................... /*		if(input_b() & 0x80 == 0){  
.................... 			a = 0;  
.................... 			b = 0;  
.................... 			a = 0;  
.................... 		}*/  
.................... 		sub();  
005F:  GOTO   004
.................... 		output_b(bbb);  
0060:  MOVLW  00
0061:  BSF    03.5
0062:  MOVWF  06
0063:  BCF    03.5
0064:  MOVF   2C,W
0065:  MOVWF  06
.................... 		output_c(ccc);  
0066:  MOVLW  00
0067:  MOVWF  30
0068:  BSF    03.5
0069:  MOVWF  07
006A:  BCF    03.5
006B:  MOVF   2D,W
006C:  MOVWF  07
.................... 		delay_ms(100);  
006D:  MOVLW  64
006E:  MOVWF  31
006F:  GOTO   02B
.................... 		cnt++;  
0070:  INCF   2F,F
.................... 	}  
0071:  GOTO   05F
.................... }  
....................   
0072:  SLEEP
.................... void sub (void) {  
.................... 	check = input_a() & 0x80;  
*
0004:  MOVLW  FF
0005:  BSF    03.5
0006:  MOVWF  05
0007:  BCF    03.5
0008:  MOVF   05,W
0009:  ANDLW  80
000A:  MOVWF  2E
.................... 	if(!check)	aaa = 0xb0;  
000B:  MOVF   2E,F
000C:  BTFSS  03.2
000D:  GOTO   010
000E:  MOVLW  B0
000F:  MOVWF  2B
....................   
.................... 	check = input_b() & 0x80;  
0010:  MOVLW  FF
0011:  BSF    03.5
0012:  MOVWF  06
0013:  BCF    03.5
0014:  MOVF   06,W
0015:  ANDLW  80
0016:  MOVWF  2E
.................... 	if(!check)	bbb = 0xb0;  
0017:  MOVF   2E,F
0018:  BTFSS  03.2
0019:  GOTO   01C
001A:  MOVLW  B0
001B:  MOVWF  2C
....................   
.................... 	check = input_c() & 0x80;  
001C:  MOVLW  FF
001D:  MOVWF  30
001E:  BSF    03.5
001F:  MOVWF  07
0020:  BCF    03.5
0021:  MOVF   07,W
0022:  ANDLW  80
0023:  MOVWF  2E
.................... 	if(!check)	ccc = 0xb0;  
0024:  MOVF   2E,F
0025:  BTFSS  03.2
0026:  GOTO   029
0027:  MOVLW  B0
0028:  MOVWF  2D
0029:  BCF    0A.3
002A:  GOTO   060 (RETURN)
....................   
.................... /*	if(a != 0){   
.................... 		if(cnt % 5 == 0) aa++;  
.................... 		if(aa >= 0x08) aa = 0x01;  
.................... 		aaa = aa << 4;  
.................... 		aaa = ~aaa;  
.................... 	}  
.................... 	if(b != 0){   
.................... 		if(cnt % 5 == 0) bb++;  
.................... 		if(bb >= 0x08) bb = 0x01;  
.................... 		bbb = bb << 4;  
.................... 		bbb = ~bbb;   
.................... 	}  
.................... 	if(c != 0){   
.................... 		if(cnt % 5 == 0) cc++;  
.................... 		if(cc >= 0x08) cc = 0x01;  
.................... 		ccc = cc << 4;  
.................... 		ccc = ~ccc;  
.................... 	} */  
.................... }  
....................  
